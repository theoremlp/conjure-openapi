openapi: "3.0.1"
paths: {}
components:
  schemas:
    AnObject:
      required:
        - "fieldOne"
        - "fieldTwo"
      type: "object"
      properties:
        fieldOne:
          type: "integer"
          format: "int32"
        fieldTwo:
          type: "string"
    someIntegerWrapper:
      required:
        - "type"
        - "someInteger"
      type: "object"
      properties:
        type:
          type: "string"
        someInteger:
          type: "integer"
          format: "int32"
    someObjectWrapper:
      required:
        - "type"
        - "someObject"
      type: "object"
      properties:
        type:
          type: "string"
        someObject:
          $ref: "#/components/schemas/AnObject"
    ObjectUnion:
      discriminator:
        propertyName: "type"
      oneOf:
        - $ref: "#/components/schemas/someIntegerWrapper"
        - $ref: "#/components/schemas/someObjectWrapper"
    doubleTypeWrapper:
      required:
        - "type"
        - "doubleType"
      type: "object"
      properties:
        type:
          type: "string"
        doubleType:
          type: "number"
          format: "float"
    integerTypeWrapper:
      required:
        - "type"
        - "integerType"
      type: "object"
      properties:
        type:
          type: "string"
        integerType:
          type: "integer"
          format: "int32"
    stringTypeWrapper:
      required:
        - "type"
        - "stringType"
      type: "object"
      properties:
        type:
          type: "string"
        stringType:
          type: "string"
    PrimitiveUnion:
      discriminator:
        propertyName: "type"
      oneOf:
        - $ref: "#/components/schemas/doubleTypeWrapper"
        - $ref: "#/components/schemas/integerTypeWrapper"
        - $ref: "#/components/schemas/stringTypeWrapper"
