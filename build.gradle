buildscript {
    repositories {
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.baseline:gradle-baseline-java:4.159.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.9.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.15.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.26.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:2.1.0'
    }
}

plugins {
    id "com.markelliot.versions" version "0.11.0"
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'

version System.env.CIRCLE_TAG ?: gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'

    version rootProject.version
    group 'com.theoremlp.conjure.openapi'

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.baseline-class-uniqueness'

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
        options.errorprone {
            disable 'PreferSafeLoggableExceptions'
            disable 'PreferSafeLoggingPreconditions'
            disable 'Slf4jLogsafeArgs'
            disable 'PreferSafeLogger'
            disable 'Slf4jConstantLogMessage'
        }
    }

    tasks.check.dependsOn(javadoc)
}

javaVersions {
    libraryTarget = 17
}
